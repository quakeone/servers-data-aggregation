name: CI
on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-2
  EC2: "13.58.153.105"
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: servers-data-aggregation
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  deploy:
    name: Deploy to Env
    runs-on: quakeone-instance
    
    steps:
    - name: Stop existing container
      continue-on-error: true
      run: docker stop data-aggregation

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Run new container
      run: |
        docker run -d \
          -e DB_USER=docker \
          -e DB_HOST=postgres \
          -e DB=servers \
          -e DB_PASS={{ secrets.DB_PASS }} \
          -e QE_PSK={{ secrets.QE_PSK }} \
          --network=data-aggregation \
          --restart=always \
          $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG